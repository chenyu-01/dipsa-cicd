name: CI/CD Workflow

on:
  push:
    branches:    
      - 'v[0-9].[0-9]' # matches v1.0, v2.3, etc.


jobs:

  scan:
    ## Only run this job if the commit message does not start with '#NORUN'
    if:  ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}
    
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code in scan job
      uses: actions/checkout@v4

      
    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@master
      id: trivy
      continue-on-error: true # Continue on error, the outcome will be failure
      with: 
        scan-type: 'fs'
        format: 'table'
        output: 'trivy-results.txt'
        exit-code: '1' # Will fail the *job* if there are any CRITICAL or HIGH vulnerabilities
        severity: 'CRITICAL' # CRITICAL will Success, High will Fail 
 
    - name: Slack Notification
      if:  ${{ steps.trivy.outcome == 'failure' }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: Scan failed - ${{ github.actor }}
        SLACK_COLOR: '#ff0000'
        SLACK_MESSAGE: Failed trivy scan, see uploaded report
    
    - name: Upload scan results to slack
      if:  ${{ steps.trivy.outcome == 'failure' }}
      uses: MeilCli/slack-upload-file@v3
      with:
        slack_token: ${{ secrets.SLACK_TOKEN }}
        channel_id: ${{ secrets.SLACK_CHANNEL }}
        file_path: trivy-results.txt
        initial_comment: "Scan report by ${{ secrets.NAME }}"

    ## if no failure, build and push docker image
    -
      if:  ${{ steps.trivy.outcome == 'success' }}
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    -
      if:  ${{ steps.trivy.outcome == 'success' }}
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Build and push
      if: ${{ steps.trivy.outcome == 'success' }}
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/cicd:${{ github.sha }}

    ## use cosign to digitally sign image 
    - name: Install Cosign
      if: ${{ steps.trivy.outcome == 'success' }}
      uses: sigstore/cosign-installer@v3.1.1



    - name: Sign image with a key
      if: ${{ steps.trivy.outcome == 'success' }}
      continue-on-error: true
      run: |
        cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
      env:
        TAGS: ${{ secrets.DOCKER_USERNAME }}/cicd:${{ github.sha }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        DIGEST: ${{ steps.docker_build.outputs.digest }}

    ## send success notification to slack
    - name: send success notification to slack
      if: ${{ steps.trivy.outcome == 'success' }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: Image build and signed
        SLACK_COLOR: good
        SLACK_MESSAGE: "*Name:* ${{ secrets.NAME}}\n*Metriculation:* ${{ secrets.MATRIC}}\n*Email:* ${{ secrets.EMAIL }}\n*Git:* <${{ github.server_url }}/${{ github.repository}}>\n*Image:* <https://hub.docker.com/repository/docker/${{ secrets.DOCKER_USERNAME }}/cicd>"